var ProjectForm=React.createClass({displayName:"ProjectForm",getInitialState:function(){return{tags:[],members:[],formErrors:{}}},handleSubmit:function(a){a.preventDefault();var b=new FormData,c=["image/jpeg","image/pjpeg","image/png","image/bmp","image/svg+xml","image/tiff"];form=$("#project-form")[0],errors={},$("#create-form :input").each(function(){if("file"==this.type)if(form.logo.files[0]){var a=form.logo.files[0];-1==c.indexOf(a.type)?(errors.logo="Not a valid image type: "+a.type,errors.hasErrors=!0):a.size>2e6?(errors.logo="Max file size: 2MB",errors.hasErrors=!0):b.append(this.name,a)}else errors.logo="You must include a logo",errors.hasErrors=!0;else"checkbox"==this.type?b.append(this.name,this.checked):this.value&&this.name&&b.append(this.name,this.value)}),b.append("tags",JSON.stringify(this.state.tags)),b.append("members",JSON.stringify(this.state.members)),form.name.value||(errors.name="Project name is required",errors.hasErrors=!0),form.description.value||(errors.description="Project description is required",errors.hasErrors=!0),form.type.value||(errors.type="Project type is required",errors.hasErrors=!0),0==this.state.members.length&&(errors.members="Projects must have at least one member",errors.hasErrors=!0),errors.hasErrors||$.ajax({type:"POST",url:this.props.url,data:b,processData:!1,contentType:!1,success:function(a){console.log(a.success),$("#create-success").modal("show")},failure:function(a,b){console.log(b)}}),this.setState({formErrors:errors})},handleTags:function(a){this.setState({tags:a})},handleMembers:function(a){this.setState({members:a})},render:function(){var a=this.state.formErrors,b=React.createElement("span",{className:"required"},"required");return React.createElement("form",{id:"project-form",onSubmit:this.handleSubmit},React.createElement("div",{className:"row"},React.createElement(ProjectInput,{name:"name",required:b,displayName:"Project Name"}),React.createElement("p",{className:"formError"},a.name),React.createElement("div",null,React.createElement("span",{className:"input-field"},"Description",b),React.createElement("textarea",{className:"input-container",name:"description"})),React.createElement("p",{className:"formError"},a.description),React.createElement(MemberInput,{update:this.handleMembers.bind(this),required:b,url:"/api/users"}),React.createElement("p",{className:"formError"},a.members),React.createElement("div",null,React.createElement("span",{className:"input-field"},"Logo",b),React.createElement("input",{className:"input-container",type:"file",name:"logo"})),React.createElement("p",{className:"formError"},a.logo),React.createElement(ProjectInput,{name:"website",displayName:"Website URL"}),React.createElement(ProjectInput,{name:"fbPage",displayName:"Facebook Page URL"}),React.createElement(ProjectInput,{name:"demo",displayName:"Youtube Embed URL"}),React.createElement("div",null,React.createElement("span",{className:"input-field"},"Type"),React.createElement("select",{required:!0,className:"input-container",name:"type"},React.createElement("option",{value:"startup"},"Startup"),React.createElement("option",{value:"project"},"Project"),React.createElement("option",{value:"idea"},"Idea"))),React.createElement("p",{className:"formError"},a.type),React.createElement("div",null,React.createElement("span",{className:"input-field"},"Hiring"),React.createElement("input",{className:"input-container",type:"checkbox",name:"hiring"})),React.createElement(TagInput,{update:this.handleTags.bind(this)}),React.createElement("button",{type:"submit",className:"btn btn-primary"},"Submit")))}}),ProjectInput=React.createClass({displayName:"ProjectInput",render:function(){return React.createElement("div",null,React.createElement("span",{className:"input-field"},this.props.displayName,this.props.required),React.createElement("input",{className:"input-container",type:"text",name:this.props.name}))}}),TagInput=React.createClass({displayName:"TagInput",getInitialState:function(){return{tagNames:[]}},addTag:function(a){var b=(a.keyCode,a.target.value),c=this.state.tagNames;if(b.match(/^\s*\w+ $/)){b=b.trim();var d=React.addons.update(c,{$push:[b.substr(0,b.length)]});this.setState({tagNames:d}),this.props.update(d),$("#inputTags").val("")}},tagAction:function(){var a=event.keyCode,b=event.target.value,c=this.state.tagNames;if(8!=a&&46!=a||""!==event.target.value){if(13==a&&(event.preventDefault(),!b.match(/^\s*$/))){b=b.trim();var d=React.addons.update(c,{$push:[b.substr(0,b.length)]});this.setState({tagNames:d}),this.props.update(d),$("#inputTags").val("")}}else{var d=c.filter(function(a,b){return b!==c.length-1});this.setState({tagNames:d}),this.props.update(d),$("#inputTags").val("")}},focus:function(){$("#inputTags").focus()},render:function(){var a=this.state.tagNames.map(function(a){return React.createElement("span",{className:"tag"},a)});return React.createElement("div",null,React.createElement("span",{className:"input-field"},"Tags",React.createElement("span",{className:"required"},"Separate with spaces")),React.createElement("div",{className:"input-container",onClick:this.focus},React.createElement("span",null,a),React.createElement("input",{id:"inputTags",onKeyUp:this.addTag,onKeyDown:this.tagAction,type:"text"})))}}),MemberInput=React.createClass({displayName:"MemberInput",getInitialState:function(){return{users:[],selectedUsers:[],selectIndex:0}},selectUser:function(a){var b=this.state.selectedUsers,c=1==b.filter(function(b){return b._id==a._id}).length;if(!c){var d=React.addons.update(b,{$push:[a]});this.setState({selectedUsers:d}),this.props.update(d.map(function(a){return{user:a._id}}))}$("#memberInput").popover("hide"),$("#memberInput").val("")},addMember:function(a){var b=a.target.value.toLowerCase(),c=this.state.users,d=this.selectUser,e=c.filter(function(a){var c=a.fname+" "+a.lname;return!b||0==a.fname.toLowerCase().indexOf(b)||0==a.lname.toLowerCase().indexOf(b)||0==c.toLowerCase().indexOf(b)}).map(function(a,b){var c="list-group-item"+(b==this.state.selectIndex?" active":"");return React.createElement("a",{onClick:d.bind(this,a)},React.createElement("li",{className:c},React.createElement("img",{src:a.picture,width:"35"}),React.createElement("span",{className:"name"},a.fname," ",a.lname)))}.bind(this)).slice(0,5);0==e.length&&(e=React.createElement("li",{className:"list-group-item"},React.createElement("img",{src:"/img/default-profile.png",width:"35"}),React.createElement("span",{className:"name"},"User not found."))),!$("#popover-content").length&&b?$("#memberInput").popover("show"):b&&0!=e.length||($("#memberInput").popover("hide"),this.setState({selectIndex:0})),b&&React.render(React.createElement("ul",{className:"list-group"},e),document.getElementById("popover-content"))},memberAction:function(a){var b=a.keyCode||a.charCode,c=this.state.selectedUsers;if(8!=b&&46!=b||""!==a.target.value){if(13==b)return a.preventDefault(),$("#popover-content a").get(this.state.selectIndex).click(),!1;if(38==b||40==b){var d=this.state.selectIndex+(38==b?-1:1);d>=0&&d<$("#popover-content a").length&&this.setState({selectIndex:d})}}else{var e=c.filter(function(a,b){return b!==c.length-1});this.setState({selectedUsers:e}),this.props.update(e)}},componentDidMount:function(){$("#memberInput").popover({html:!0,content:'<div id="popover-content"></div>',placement:"bottom",trigger:"manual",viewport:"#selectedUsers"}),$.get(this.props.url,function(a){this.setState({users:a.users,selectedUsers:[a.user]}),this.props.update([{user:a.user._id}])}.bind(this))},focus:function(){$("#memberInput").focus()},render:function(){return React.createElement("div",null,React.createElement("span",{className:"input-field"},"Members",this.props.required),React.createElement("div",{className:"input-container",onClick:this.focus},React.createElement(SelectedUsers,{users:this.state.selectedUsers}),React.createElement("input",{id:"memberInput",autoComplete:"off",onKeyUp:this.addMember,onKeyDown:this.memberAction,type:"text"})))}}),SelectedUsers=React.createClass({displayName:"SelectedUsers",render:function(){var a=this.props.users.map(function(a){return React.createElement("span",{className:"tag"},a.fname)});return React.createElement("span",{id:"selectedUsers"},a)}});React.render(React.createElement(ProjectForm,{url:"/api/project"}),document.getElementById("create-form"));